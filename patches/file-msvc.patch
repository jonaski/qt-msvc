diff --git a/src/compress.c b/src/compress.c
index 282f2a3..15a960e 100644
--- a/src/compress.c
+++ b/src/compress.c
@@ -1088,9 +1088,14 @@ uncompressbuf(int fd, size_t bytes_max, size_t method, int nofork,
 	 * and both must have large outputs. Thus it happens not that often).
 	 * To avoid this, be sure to create pipes with O_CLOEXEC.
 	 */
+#ifdef WIN32
+	if ((fd == -1 && pipe(fdp[STDIN_FILENO]) == -1) ||
+	    pipe(fdp[STDOUT_FILENO]) == -1 || pipe(fdp[STDERR_FILENO]) == -1) {
+#else
 	if ((fd == -1 && file_pipe_closexec(fdp[STDIN_FILENO]) == -1) ||
 	    file_pipe_closexec(fdp[STDOUT_FILENO]) == -1 ||
 	    file_pipe_closexec(fdp[STDERR_FILENO]) == -1) {
+#endif
 		closep(fdp[STDIN_FILENO]);
 		closep(fdp[STDOUT_FILENO]);
 		return makeerror(newch, n, "Cannot create pipe, %s",
diff --git a/src/file.h b/src/file.h
index 1e1f1e7..66adb90 100644
--- a/src/file.h
+++ b/src/file.h
@@ -584,7 +584,9 @@ file_protected char * file_printable(struct magic_set *, char *, size_t,
 file_protected int file_os2_apptype(struct magic_set *, const char *, const void *,
     size_t);
 #endif /* __EMX__ */
+#ifndef WIN32
 file_protected int file_pipe_closexec(int *);
+#endif
 file_protected int file_clear_closexec(int);
 file_protected char *file_strtrim(char *);
 
diff --git a/src/funcs.c b/src/funcs.c
index d4fefcd..6ae167b 100644
--- a/src/funcs.c
+++ b/src/funcs.c
@@ -875,6 +875,7 @@ file_print_guid(char *str, size_t len, const uint64_t *guid)
 #endif
 }
 
+#ifndef WIN32
 file_protected int
 file_pipe_closexec(int *fds)
 {
@@ -890,6 +891,7 @@ file_pipe_closexec(int *fds)
 	return 0;
 #endif
 }
+#endif
 
 file_protected int
 file_clear_closexec(int fd) {
diff --git a/tests/test.c b/tests/test.c
index a942ba5..5230f03 100644
--- a/tests/test.c
+++ b/tests/test.c
@@ -30,6 +30,7 @@
 #include <unistd.h>
 #include <string.h>
 #include <errno.h>
+#include <getopt.h>
 
 #include "magic.h"
 
