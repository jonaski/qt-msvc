diff --git a/src/compress.c b/src/compress.c
index b456626f..fec951ca 100644
--- a/src/compress.c
+++ b/src/compress.c
@@ -924,9 +924,14 @@ uncompressbuf(int fd, size_t bytes_max, size_t method, const unsigned char *old,
 	 * and both must have large outputs. Thus it happens not that often).
 	 * To avoid this, be sure to create pipes with O_CLOEXEC.
 	 */
+#ifdef WIN32
+	if ((fd == -1 && pipe(fdp[STDIN_FILENO]) == -1) ||
+	    pipe(fdp[STDOUT_FILENO]) == -1 || pipe(fdp[STDERR_FILENO]) == -1) {
+#else
 	if ((fd == -1 && file_pipe_closexec(fdp[STDIN_FILENO]) == -1) ||
 	    file_pipe_closexec(fdp[STDOUT_FILENO]) == -1 ||
 	    file_pipe_closexec(fdp[STDERR_FILENO]) == -1) {
+#endif
 		closep(fdp[STDIN_FILENO]);
 		closep(fdp[STDOUT_FILENO]);
 		return makeerror(newch, n, "Cannot create pipe, %s",
diff --git a/src/file.c b/src/file.c
index 1566a17f..2aad57c0 100644
--- a/src/file.c
+++ b/src/file.c
@@ -602,7 +602,7 @@ fname_print(const char *inname)
 	for (i = 0; i < n; i++) {
 		unsigned char c = CAST(unsigned char, inname[i]);
 		if (isprint(c)) {
-			putc(c);
+			putchar(c);
 			continue;
 		}
 		file_octal(c);
diff --git a/src/funcs.c b/src/funcs.c
index 41c4106c..ea121d23 100644
--- a/src/funcs.c
+++ b/src/funcs.c
@@ -841,6 +841,7 @@ file_print_guid(char *str, size_t len, const uint64_t *guid)
 #endif
 }
 
+#ifndef WIN32
 protected int
 file_pipe_closexec(int *fds)
 {
@@ -856,6 +857,7 @@ file_pipe_closexec(int *fds)
 	return 0;
 #endif
 }
+#endif
 
 protected int
 file_clear_closexec(int fd) {
@@ -882,3 +884,4 @@ file_strtrim(char *str)
 	*++last = '\0';
 	return str;
 }
+
