diff --git a/CMakeLists.txt b/CMakeLists.txt
new file mode 100644
index 0000000..f525172
--- /dev/null
+++ b/CMakeLists.txt
@@ -0,0 +1,48 @@
+cmake_minimum_required(VERSION 3.0)
+project(bzip2 C)
+
+if(CMAKE_BUILD_TYPE STREQUAL Debug)
+    add_definitions(-DBZ_DEBUG) # enable extra assertions
+endif()
+
+set(BZ2_SOURCES
+    blocksort.c
+    huffman.c
+    crctable.c
+    randtable.c
+    compress.c
+    decompress.c
+    bzlib.c)
+
+add_library(bz2 ${BZ2_SOURCES})
+set_target_properties(bz2 PROPERTIES
+    DEBUG_POSTFIX d
+    VERSION 1.0.6
+    SOVERSION 1.0)
+if(BUILD_SHARED_LIBS)
+    target_compile_definitions(bz2 PRIVATE -DBZ_BUILD_DLL)
+endif()
+
+if(MSVC)
+    add_definitions(-D_CRT_SECURE_NO_WARNINGS)
+    add_definitions(-D_CRT_SECURE_NO_DEPRECATE)
+    add_definitions(-D_CRT_NONSTDC_NO_DEPRECATE)
+endif()
+
+install(TARGETS bz2
+    RUNTIME DESTINATION bin
+    ARCHIVE DESTINATION lib
+    LIBRARY DESTINATION lib)
+
+if(NOT BZIP2_SKIP_TOOLS)
+    add_executable(bzip2 bzip2.c ${BZ2_SOURCES})
+    add_executable(bzip2recover bzip2recover.c ${BZ2_SOURCES})
+    install(TARGETS bzip2 bzip2recover DESTINATION tools/bzip2)
+endif()
+
+if(NOT BZIP2_SKIP_HEADERS)
+    install(FILES bzlib.h DESTINATION include)
+endif()
+
+configure_file(${CMAKE_SOURCE_DIR}/bzip2.pc.in ${CMAKE_BINARY_DIR}/bzip2.pc @ONLY)
+install(FILES ${CMAKE_BINARY_DIR}/bzip2.pc DESTINATION lib/pkgconfig)
diff --git a/bzip2.pc.in b/bzip2.pc.in
new file mode 100644
index 0000000..91153c1
--- /dev/null
+++ b/bzip2.pc.in
@@ -0,0 +1,11 @@
+prefix=@BZIP2_PREFIX@
+exec_prefix=${prefix}
+libdir=${prefix}/lib
+includedir=${prefix}/include
+
+Name: bzip2
+Description: bzip2
+Version: 1.0.6
+Requires: 
+Libs: -L${libdir} -l@bzname@
+Cflags: -I${includedir}
\ No newline at end of file
diff --git a/bzlib.h b/bzlib.h
index 8966a6c..3429d5d 100644
--- a/bzlib.h
+++ b/bzlib.h
@@ -65,29 +65,23 @@ typedef
    } 
    bz_stream;
 
-
-#ifndef BZ_IMPORT
-#define BZ_EXPORT
-#endif
-
 #ifndef BZ_NO_STDIO
 /* Need a definitition for FILE */
 #include <stdio.h>
 #endif
 
 #ifdef _WIN32
-#   include <windows.h>
 #   ifdef small
       /* windows.h define small to char */
 #      undef small
 #   endif
-#   ifdef BZ_EXPORT
-#   define BZ_API(func) WINAPI func
-#   define BZ_EXTERN extern
+#   define BZ_API(func) func
+#   if defined(BZ_BUILD_DLL)
+#      define BZ_EXTERN __declspec(dllexport)
+#   elif defined(BZ_IMPORT)
+#      define BZ_EXTERN __declspec(dllimport)
 #   else
-   /* import windows dll dynamically */
-#   define BZ_API(func) (WINAPI * func)
-#   define BZ_EXTERN
+#      define BZ_EXTERN
 #   endif
 #else
 #   define BZ_API(func) func
