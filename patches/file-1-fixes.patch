diff --git a/src/compress.c b/src/compress.c
index 113077ae..8cae9061 100644
--- a/src/compress.c
+++ b/src/compress.c
@@ -924,9 +924,14 @@ uncompressbuf(int fd, size_t bytes_max, size_t method, const unsigned char *old,
 	 * and both must have large outputs. Thus it happens not that often).
 	 * To avoid this, be sure to create pipes with O_CLOEXEC.
 	 */
+#ifdef WIN32
+	if ((fd == -1 && pipe(fdp[STDIN_FILENO]) == -1) ||
+	    pipe(fdp[STDOUT_FILENO]) == -1 || pipe(fdp[STDERR_FILENO]) == -1) {
+#else
 	if ((fd == -1 && file_pipe_closexec(fdp[STDIN_FILENO]) == -1) ||
 	    file_pipe_closexec(fdp[STDOUT_FILENO]) == -1 ||
 	    file_pipe_closexec(fdp[STDERR_FILENO]) == -1) {
+#endif
 		closep(fdp[STDIN_FILENO]);
 		closep(fdp[STDOUT_FILENO]);
 		return makeerror(newch, n, "Cannot create pipe, %s",
diff --git a/src/file.h b/src/file.h
index 343f62ea..bb7693d0 100644
--- a/src/file.h
+++ b/src/file.h
@@ -575,14 +575,16 @@ protected size_t file_pstring_length_size(struct magic_set *,
     const struct magic *);
 protected size_t file_pstring_get_length(struct magic_set *,
     const struct magic *, const char *);
-public char * file_printable(struct magic_set *, char *, size_t,
+__declspec(dllexport) char * file_printable(struct magic_set *, char *, size_t,
     const char *, size_t);
 #ifdef __EMX__
 protected int file_os2_apptype(struct magic_set *, const char *, const void *,
     size_t);
 #endif /* __EMX__ */
+#ifndef WIN32
 protected int file_pipe_closexec(int *);
 protected int file_clear_closexec(int);
+#endif
 protected char *file_strtrim(char *);
 
 protected void buffer_init(struct buffer *, int, const struct stat *,
diff --git a/src/funcs.c b/src/funcs.c
index 71041441..947f977c 100644
--- a/src/funcs.c
+++ b/src/funcs.c
@@ -763,7 +763,7 @@ file_pop_buffer(struct magic_set *ms, file_pushbuf_t *pb)
 /*
  * convert string to ascii printable format.
  */
-public char *
+__declspec(dllexport) char *
 file_printable(struct magic_set *ms, char *buf, size_t bufsiz,
     const char *str, size_t slen)
 {
@@ -840,6 +840,7 @@ file_print_guid(char *str, size_t len, const uint64_t *guid)
 #endif
 }
 
+#ifndef WIN32
 protected int
 file_pipe_closexec(int *fds)
 {
@@ -855,6 +856,7 @@ file_pipe_closexec(int *fds)
 	return 0;
 #endif
 }
+#endif
 
 protected int
 file_clear_closexec(int fd) {
@@ -881,3 +883,4 @@ file_strtrim(char *str)
 	*++last = '\0';
 	return str;
 }
+
